pipeline{
    agent any
    environment{
        VERSION = "${env.BUILD_ID}"
    }
    stages{
        stage("sonar qube analysis"){
            // agent{
            //    docker {
            //         image 'openjdk:11'
            //    }
            // }
            steps{
               script{
                withSonarQubeEnv(credentialsId: 'sonar-token') {
                      sh '''
                      chmod +x gradlew
                      ./gradlew sonarqube
                      '''
                    }
                timeout (time: 1, unit: 'HOURS') {
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
               }
            }
        }
        stage ("docker build & docker push") {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'nexus_pass', usernameVariable: 'nexus_user')]) {
                        sh '''
                            docker build -t 35.184.45.48:8083/springboot:${VERSION} .
                            docker login -u $nexus_user -p $nexus_pass 35.184.45.48:8083
                            docker push 35.184.45.48:8083/springboot:${VERSION} 
                            docker rmi 35.184.45.48:8083/springboot:${VERSION}
                        '''
                    }
                }
            }
        }
    }
}